{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBb,EAAAgB,OAAOI,QAAQ,sBAAuCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAhCnDQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAIC,EAAUF,EAAEG,cAAc,GAAGC,cAC3BC,EAASL,EAAEG,cAAc,GAAGC,cAC5BE,EAAWN,EAAEG,cAAc,GAAGC,cAE3BhB,EAAW,EAAGA,GAAYkB,EAAUlB,GAAY,EACvDV,EAAcU,EAAUc,GACxBA,GAAWG,EAEbL,EAAEG,cAAcI,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delayEl = e.currentTarget[0].valueAsNumber;\n  const stepEl = e.currentTarget[1].valueAsNumber;\n  const amountEl = e.currentTarget[2].valueAsNumber;\n\n  for (let position = 1; position <= amountEl; position += 1) {\n    createPromise(position, delayEl);\n    delayEl += stepEl;\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\n\n\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","document","querySelector","addEventListener","e","preventDefault","delayEl","currentTarget","valueAsNumber","stepEl","amountEl","reset"],"version":3,"file":"03-promises.2daed208.js.map"}